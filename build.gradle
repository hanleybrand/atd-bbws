import java.nio.file.Files
import java.nio.file.Paths
import java.util.regex.Pattern

/*
 * TThis build file was generated by the Gradle 3.3 'init' task.
 * user guide available at https://docs.gradle.org/current/userguide/userguide.html
 *
 */

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'

sourceCompatibility = 1.7
targetCompatibility = 1.7

task wrapper(type: Wrapper) {
    gradleVersion = "3.3"
}


if (isBuildingBlock()) {
    version = getB2Version()
}

//repositories {
//    mavenCentral()
//    maven {
//        url "https://bbprepo.blackboard.com/content/repositories/releases/"
//    }
//}
//
//configurations {
//
//    b2deploy
//}
//


repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    maven {
        url "https://bbprepo.blackboard.com/content/repositories/releases/"
    }
}

dependencies {
//    b2deploy 'org.oscelot:b2deploy-task:0.1.0'

    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:jul-to-slf4j:1.7.5'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'

    compile 'com.thoughtworks.xstream:xstream:1.4.7'
    compile 'net.sourceforge.stripes:stripes:1.5.7'
    compile 'org.springframework:spring-beans:4.3.5.RELEASE'
    compile 'org.springframework:spring-web:4.3.5.RELEASE'
    compile files('lib/bb-stripes-utils-1.1.0.jar')
    compile files('lib/b2-config-utils-1.0.3.jar')

    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.16'
    compile 'org.glassfish.hk2:spring-bridge:2.3.0'


    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.5.1'

    compileOnly 'javax.servlet:javax.servlet-api:3.0.1'
    compileOnly 'jstl:jstl:1.2'
    compileOnly 'blackboard.platform:bb-platform:3000.1.0-rel.52'
    compileOnly 'blackboard.platform:bb-taglibs:3000.1.0-rel.52'

    testCompile "junit:junit:4.11"
}

//ant.taskdef(name: 'b2deploy', classname: 'org.oscelot.ant.B2DeployTask', classpath: configurations.b2deploy.asPath)

//task deployb2(dependsOn: 'war') << {
//    println "Deploying \"" + war.archivePath + "\""
//    ant.b2deploy(localfilepath: war.archivePath,
//            host: 'localhost:9876',
//            clean: 'true',
//            courseorgavailable: 'true')
//}


String getB2Version() {
    File mfFile = new File(file(webAppDir), 'WEB-INF/bb-manifest.xml');
    def manifest = new XmlSlurper().parse(mfFile);
    return manifest.plugin.version['@value'];
}

boolean isBuildingBlock() {
    File mfFile = new File(file(webAppDir), 'WEB-INF/bb-manifest.xml');
    return mfFile.exists();
}

